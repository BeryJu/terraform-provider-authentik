name: test-acc-authentik-master
on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 13 * * *'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v2.4.0
    - uses: actions/setup-go@v2.1.5
      with:
        go-version: '1.16'
    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        go build -v .
  test:
    name: Matrix Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        terraform:
          - '1.0.9'
          - '1.1.1'
    steps:
    - uses: actions/checkout@v2.4.0
    - uses: actions/setup-go@v2.1.5
      with:
        go-version: '1.16'
    - name: Setup authentik
      uses: ./.github/actions/setup-authentik
      id: setup
      with:
        beta: "true"
        sentry_env: goauthentik-terraform-ci

    - name: Get dependencies
      run: |
        go get github.com/axw/gocov/gocov
        go get github.com/AlekSi/gocov-xml
        go get github.com/jstemmer/go-junit-report

    - name: TF acceptance tests
      timeout-minutes: 30
      env:
        TF_ACC: "1"
        TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
        AUTHENTIK_TOKEN: ${{ steps.setup.outputs.admin_token }}
        AUTHENTIK_URL: ${{ steps.setup.outputs.http_url }}
      run: |
        go test -timeout 0 -v -race -coverprofile=coverage.out -covermode=atomic -cover ./internal/provider/ | go-junit-report > junit.xml

    - uses: testspace-com/setup-testspace@v1
      with:
        domain: ${{github.repository_owner}}
    - name: run testspace
      if: ${{ always() }}
      run: |
        gocov convert coverage.out | gocov-xml > coverage.xml
        testspace [master]junit.xml --link=codecov
        testspace [master]coverage.xml --link=codecov
    - if: ${{ always() }}
      uses: codecov/codecov-action@v2
