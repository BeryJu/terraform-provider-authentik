name: test-acc-authentik-stable
on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 13 * * *'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: '1.16'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.4

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        go build -v .
  test:
    name: Matrix Test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        terraform:
          - '1.0.9'
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: '1.16'
      id: go

    - name: Setup authentik
      run: |
        sudo apt-get install -y pwgen
        echo "PG_PASS=$(pwgen 40 1)" >> .env
        echo "AUTHENTIK_SECRET_KEY=$(pwgen 50 1)" >> .env
        echo "AUTHENTIK_ERROR_REPORTING__ENABLED=true" >> .env
        echo "AK_ADMIN_TOKEN=acc-test-token-key" >> .env
        wget https://raw.githubusercontent.com/goauthentik/authentik/master/docker-compose.yml
        docker-compose pull -q
        docker-compose up -d
        timeout 600 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:9000/api/v3/root/config/)" != "200" ]]; do sleep 5; done' || false

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.4

    - name: Get dependencies
      run: |
        go mod download

    - name: TF acceptance tests
      timeout-minutes: 30
      env:
        TF_ACC: "1"
        TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
        AUTHENTIK_TOKEN: "acc-test-token-key"
        AUTHENTIK_URL: http://localhost:9000
      run: |
        go test -timeout 0 -v -race -coverprofile=coverage.out -covermode=atomic -cover ./internal/provider/

    - uses: testspace-com/setup-testspace@v1
      with:
        domain: ${{github.repository_owner}}
    - name: run testspace
      if: ${{ always() }}
      run: |
        testspace unittest.xml --link=codecov
    - if: ${{ always() }}
      uses: codecov/codecov-action@v2
